import * as PropTypes from 'prop-types';
export declare const axisIface: {
    enabled: PropTypes.Requireable<any>;
    drawLabels: PropTypes.Requireable<any>;
    drawAxisLine: PropTypes.Requireable<any>;
    drawGridLines: PropTypes.Requireable<any>;
    textColor: PropTypes.Requireable<any>;
    textSize: PropTypes.Requireable<any>;
    fontFamily: PropTypes.Requireable<any>;
    fontStyle: PropTypes.Requireable<any>;
    gridColor: PropTypes.Requireable<any>;
    gridLineWidth: PropTypes.Requireable<any>;
    axisLineColor: PropTypes.Requireable<any>;
    axisLineWidth: PropTypes.Requireable<any>;
    gridDashedLine: PropTypes.Requireable<any>;
    limitLines: PropTypes.Requireable<any>;
    drawLimitLinesBehindData: PropTypes.Requireable<any>;
    axisMaximum: PropTypes.Requireable<any>;
    axisMinimum: PropTypes.Requireable<any>;
    granularity: PropTypes.Requireable<any>;
    granularityEnabled: PropTypes.Requireable<any>;
    labelCount: PropTypes.Requireable<any>;
    labelCountForce: PropTypes.Requireable<any>;
    centerAxisLabels: PropTypes.Requireable<any>;
    valueFormatter: PropTypes.Requireable<any>;
};
export declare const xAxisIface: {
    labelRotationAngle: PropTypes.Requireable<any>;
    avoidFirstLastClipping: PropTypes.Requireable<any>;
    position: PropTypes.Requireable<any>;
    enabled: PropTypes.Requireable<any>;
    drawLabels: PropTypes.Requireable<any>;
    drawAxisLine: PropTypes.Requireable<any>;
    drawGridLines: PropTypes.Requireable<any>;
    textColor: PropTypes.Requireable<any>;
    textSize: PropTypes.Requireable<any>;
    fontFamily: PropTypes.Requireable<any>;
    fontStyle: PropTypes.Requireable<any>;
    gridColor: PropTypes.Requireable<any>;
    gridLineWidth: PropTypes.Requireable<any>;
    axisLineColor: PropTypes.Requireable<any>;
    axisLineWidth: PropTypes.Requireable<any>;
    gridDashedLine: PropTypes.Requireable<any>;
    limitLines: PropTypes.Requireable<any>;
    drawLimitLinesBehindData: PropTypes.Requireable<any>;
    axisMaximum: PropTypes.Requireable<any>;
    axisMinimum: PropTypes.Requireable<any>;
    granularity: PropTypes.Requireable<any>;
    granularityEnabled: PropTypes.Requireable<any>;
    labelCount: PropTypes.Requireable<any>;
    labelCountForce: PropTypes.Requireable<any>;
    centerAxisLabels: PropTypes.Requireable<any>;
    valueFormatter: PropTypes.Requireable<any>;
};
export declare const yAxisIface: {
    inverted: PropTypes.Requireable<any>;
    spaceTop: PropTypes.Requireable<any>;
    spaceBottom: PropTypes.Requireable<any>;
    position: PropTypes.Requireable<any>;
    maxWidth: PropTypes.Requireable<any>;
    minWidth: PropTypes.Requireable<any>;
    zeroLine: PropTypes.Requireable<any>;
    enabled: PropTypes.Requireable<any>;
    drawLabels: PropTypes.Requireable<any>;
    drawAxisLine: PropTypes.Requireable<any>;
    drawGridLines: PropTypes.Requireable<any>;
    textColor: PropTypes.Requireable<any>;
    textSize: PropTypes.Requireable<any>;
    fontFamily: PropTypes.Requireable<any>;
    fontStyle: PropTypes.Requireable<any>;
    gridColor: PropTypes.Requireable<any>;
    gridLineWidth: PropTypes.Requireable<any>;
    axisLineColor: PropTypes.Requireable<any>;
    axisLineWidth: PropTypes.Requireable<any>;
    gridDashedLine: PropTypes.Requireable<any>;
    limitLines: PropTypes.Requireable<any>;
    drawLimitLinesBehindData: PropTypes.Requireable<any>;
    axisMaximum: PropTypes.Requireable<any>;
    axisMinimum: PropTypes.Requireable<any>;
    granularity: PropTypes.Requireable<any>;
    granularityEnabled: PropTypes.Requireable<any>;
    labelCount: PropTypes.Requireable<any>;
    labelCountForce: PropTypes.Requireable<any>;
    centerAxisLabels: PropTypes.Requireable<any>;
    valueFormatter: PropTypes.Requireable<any>;
};
